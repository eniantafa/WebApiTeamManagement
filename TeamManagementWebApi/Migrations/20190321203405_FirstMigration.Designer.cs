// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamManagementCamp.Data;

namespace TeamManagementWebApi.Migrations
{
    [DbContext(typeof(TeamContext))]
    [Migration("20190321203405_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TeamManagementWebApi.Data.Entities.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("CityName");

                    b.Property<string>("Country");

                    b.Property<string>("PostalCode");

                    b.Property<string>("StadiumName");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            LocationId = 1,
                            Address = "123 Main Street",
                            CityName = "Milano",
                            Country = "USA",
                            PostalCode = "12345"
                        });
                });

            modelBuilder.Entity("TeamManagementWebApi.Data.Entities.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Nationality");

                    b.Property<int?>("PositionId");

                    b.Property<int?>("TeamId");

                    b.HasKey("PlayerId");

                    b.HasIndex("PositionId");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            FirstName = "Alessio",
                            LastName = "Romagnoli",
                            Nationality = "Italian",
                            PositionId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            PlayerId = 2,
                            FirstName = "Patrick",
                            LastName = "Cutrone",
                            Nationality = "Italian",
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("TeamManagementWebApi.Data.Entities.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CapacityIndex");

                    b.Property<int>("NumberOfPlayers");

                    b.Property<string>("PositionRole");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            PositionId = 1,
                            CapacityIndex = true,
                            NumberOfPlayers = 3,
                            PositionRole = "GoalKeeper"
                        },
                        new
                        {
                            PositionId = 2,
                            CapacityIndex = true,
                            NumberOfPlayers = 7,
                            PositionRole = "Defender"
                        });
                });

            modelBuilder.Entity("TeamManagementWebApi.Data.Entities.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeCreated");

                    b.Property<int?>("LocationId");

                    b.Property<string>("Moniker");

                    b.Property<string>("Name");

                    b.Property<int>("TotalNumberOfPlayers");

                    b.HasKey("TeamId");

                    b.HasIndex("LocationId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            DateTimeCreated = new DateTime(2018, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            Moniker = "Mil",
                            Name = "ACMilan",
                            TotalNumberOfPlayers = 25
                        });
                });

            modelBuilder.Entity("TeamManagementWebApi.Data.Entities.Player", b =>
                {
                    b.HasOne("TeamManagementWebApi.Data.Entities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.HasOne("TeamManagementWebApi.Data.Entities.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("TeamManagementWebApi.Data.Entities.Team", b =>
                {
                    b.HasOne("TeamManagementWebApi.Data.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");
                });
#pragma warning restore 612, 618
        }
    }
}
